{"version":3,"file":"index-083ffc8b.js","sources":["../../src/components/Code/index.tsx?raw"],"sourcesContent":["export default \"import {\\n  Component,\\n  onMount,\\n  JSX,\\n  splitProps,\\n  createSignal,\\n  Show,\\n  createEffect,\\n} from 'solid-js';\\nimport { snippetsStore } from '@utils';\\nimport Highlight from 'solid-highlight';\\nimport 'highlight.js/styles/atom-one-light.css';\\nimport './index.css';\\n\\nexport interface CodeProps extends JSX.HTMLAttributes<HTMLDivElement> {\\n  language?: string;\\n  content?: string;\\n  codeClass?: string;\\n  mapReplace?: { [matchText: string]: string };\\n  noBorder?: boolean;\\n}\\n\\nexport const Code: Component<CodeProps> = (props) => {\\n  const [code, setCode] = createSignal('');\\n  const [local, rest] = splitProps(props, [\\n    'language',\\n    'content',\\n    'codeClass',\\n    'mapReplace',\\n    'noBorder',\\n  ]);\\n\\n  const formatCode = (code: string = '') => {\\n    local.mapReplace &&\\n      Object.keys(local.mapReplace).forEach((matchText) => {\\n        const newValue = local.mapReplace![matchText];\\n        code = code.replace(new RegExp(`${matchText}`, 'ig'), newValue);\\n      });\\n\\n    if (code.match('//@ts-nocheck')) {\\n      code = code.replace('//@ts-nocheck', '');\\n      return code.substring(code.indexOf('\\\\n') + 1);\\n    } else {\\n      return code;\\n    }\\n  };\\n\\n  onMount(async () => {\\n    const code = formatCode((rest.children as string) || '');\\n    code && setCode(code);\\n  });\\n\\n  createEffect(() => {\\n    const code = formatCode((local.content as string) || '');\\n    code && setCode(code);\\n  });\\n\\n  return (\\n    <div {...rest}>\\n      <Show\\n        when={snippetsStore.loading}\\n        fallback={\\n          <div\\n            class={`code-snippet border ${local.codeClass || ''}`}\\n            classList={{ 'no-border': local.noBorder }}\\n          >\\n            <Highlight autoDetect={false} language={local.language || 'tsx'}>\\n              {code()}\\n            </Highlight>\\n          </div>\\n        }\\n      >\\n        <div\\n          class=\\\"code-snippet loading border bg-light d-flex align-items-center justify-content-center\\\"\\n          classList={{ 'no-border': local.noBorder }}\\n        >\\n          Loading...\\n        </div>\\n      </Show>\\n    </div>\\n  );\\n};\\n\""],"names":["index"],"mappings":"AAAA,MAAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;"}