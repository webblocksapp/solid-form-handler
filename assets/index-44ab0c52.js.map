{"version":3,"file":"index-44ab0c52.js","sources":["../../src/components/Radio/index.tsx?raw"],"sourcesContent":["export default \"import { FieldProps, Field } from 'solid-form-handler';\\nimport { Component, JSX, splitProps } from 'solid-js';\\n\\nexport type RadioProps = Omit<\\n  JSX.InputHTMLAttributes<HTMLInputElement>,\\n  'type' | 'value'\\n> &\\n  FieldProps & {\\n    label?: string;\\n  };\\n\\nexport const Radio: Component<RadioProps> = (props) => {\\n  const [local, rest] = splitProps(props, [\\n    'label',\\n    'classList',\\n    'formHandler',\\n  ]);\\n\\n  return (\\n    <Field\\n      {...props}\\n      mode=\\\"radio\\\"\\n      render={(field) => (\\n        <div classList={local.classList}>\\n          <div\\n            classList={{\\n              'form-check': true,\\n              'is-invalid': field.helpers.error,\\n            }}\\n          >\\n            <input\\n              {...rest}\\n              {...field.props}\\n              classList={{\\n                'form-check-input': true,\\n                'is-invalid': field.helpers.error,\\n              }}\\n              type=\\\"radio\\\"\\n            />\\n            {local.label && (\\n              <label class=\\\"form-check-label\\\" for={field.props.id}>\\n                {local.label}\\n              </label>\\n            )}\\n          </div>\\n          {field.helpers.error && (\\n            <div class=\\\"invalid-feedback\\\">{field.helpers.errorMessage}</div>\\n          )}\\n        </div>\\n      )}\\n    />\\n  );\\n};\\n\""],"names":["index"],"mappings":"AAAA,MAAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;"}