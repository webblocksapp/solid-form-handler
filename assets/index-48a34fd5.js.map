{"version":3,"file":"index-48a34fd5.js","sources":["../../src/components/Checkboxes/index.tsx?raw"],"sourcesContent":["export default \"import { FieldProps, Field } from 'solid-form-handler';\\nimport { Component, For, JSX, Show } from 'solid-js';\\nimport { Checkbox } from '@components';\\n\\ntype SelectableOption = { value: string | number; label: string };\\n\\nexport type CheckboxesProps = FieldProps & {\\n  display?: 'switch';\\n  label?: string;\\n  options?: Array<SelectableOption>;\\n  onChange?: JSX.DOMAttributes<HTMLInputElement>['onChange'];\\n  onBlur?: JSX.DOMAttributes<HTMLInputElement>['onBlur'];\\n  value?: Array<string | number>;\\n  triggers?: string[];\\n};\\n\\nexport const Checkboxes: Component<CheckboxesProps> = (props) => {\\n  return (\\n    <Field\\n      {...props}\\n      mode=\\\"checkbox-group\\\"\\n      render={(field) => (\\n        <div>\\n          <Show when={props.label}>\\n            <label>{props.label}</label>\\n          </Show>\\n          <div classList={{ 'is-invalid': field.helpers.error }}>\\n            <For each={props.options}>\\n              {(option, i) => (\\n                <Checkbox\\n                  {...field.props}\\n                  display={props.display}\\n                  id={`${field.props.id}-${i()}`}\\n                  label={option.label}\\n                  value={option.value}\\n                  error={field.helpers.error}\\n                  checked={field.helpers.isChecked(option.value)}\\n                />\\n              )}\\n            </For>\\n          </div>\\n          <Show when={field.helpers.error}>\\n            <div class=\\\"invalid-feedback\\\">{field.helpers.errorMessage}</div>\\n          </Show>\\n        </div>\\n      )}\\n    />\\n  );\\n};\\n\""],"names":["index"],"mappings":"AAAA,MAAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;"}