{"version":3,"file":"index-6a0ff8d0.js","sources":["../../src/components/Tabs/index.tsx?raw"],"sourcesContent":["export default \"import { Tab } from '@interfaces';\\nimport {\\n  Component,\\n  createSignal,\\n  For,\\n  JSXElement,\\n  Show,\\n  JSX,\\n  splitProps,\\n  createEffect,\\n} from 'solid-js';\\nimport './index.css';\\n\\nexport interface TabsProps\\n  extends Omit<JSX.HTMLAttributes<HTMLDivElement>, 'onChange'> {\\n  tabs: Tab[];\\n  onChange?: (index: number) => void;\\n}\\n\\nexport const Tabs: Component<TabsProps> = (props) => {\\n  const [tabs, setTabs] = createSignal<Tab[]>([]);\\n  const [tabIndex, setTabIndex] = createSignal<number>(0);\\n  const [hasChildren, setHasChildren] = createSignal<boolean>(false);\\n  const [local, rest] = splitProps(props, ['tabs', 'onChange']);\\n\\n  createEffect(() => {\\n    setTabs(props.tabs);\\n  });\\n\\n  createEffect(() => {\\n    setHasChildren(tabs().some((tab) => Boolean(tab.children)));\\n  });\\n\\n  return (\\n    <div class=\\\"tabs-wrapper\\\" {...rest} classList={{ 'mb-4': hasChildren() }}>\\n      <div class=\\\"tabs d-flex overflow-auto\\\">\\n        <div class=\\\"nav nav-tabs flex-grow-1 d-flex justify-content-end ps-2 pe-2\\\">\\n          <For each={tabs()}>\\n            {(tab, index) => (\\n              <div class=\\\"nav-item\\\">\\n                <span\\n                  class=\\\"nav-link\\\"\\n                  classList={{ active: tabIndex() === index() }}\\n                  onClick={() => {\\n                    setTabIndex(index());\\n                    local.onChange?.(index());\\n                  }}\\n                >\\n                  {tab.text}\\n                </span>\\n              </div>\\n            )}\\n          </For>\\n        </div>\\n      </div>\\n      <Show when={hasChildren()}>\\n        <div class=\\\"tab-content border border-top-0\\\">\\n          <For each={tabs()}>\\n            {(tab, i) => (\\n              <div\\n                classList={{\\n                  'd-none': tabIndex() !== i(),\\n                  'd-block': tabIndex() === i(),\\n                }}\\n              >\\n                {tab.children}\\n              </div>\\n            )}\\n          </For>\\n        </div>\\n      </Show>\\n    </div>\\n  );\\n};\\n\""],"names":["index"],"mappings":"AAAA,MAAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;"}