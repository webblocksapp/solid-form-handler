{"version":3,"file":"index-caeba6a7.js","sources":["../../src/components/TextInput/index.tsx?raw"],"sourcesContent":["export default \"import { FieldProps, Field } from 'solid-form-handler';\\nimport { Component, JSX, Show, splitProps } from 'solid-js';\\n\\nexport type TextInputProps = JSX.InputHTMLAttributes<HTMLInputElement> &\\n  FieldProps & { label?: string };\\n\\nexport const TextInput: Component<TextInputProps> = (props) => {\\n  const [local, rest] = splitProps(props, [\\n    'classList',\\n    'label',\\n    'formHandler',\\n  ]);\\n\\n  return (\\n    <Field\\n      {...props}\\n      mode=\\\"input\\\"\\n      render={(field) => (\\n        <div classList={local.classList}>\\n          <Show when={local.label}>\\n            <label class=\\\"form-label\\\" for={field.props.id}>\\n              {local.label}\\n            </label>\\n          </Show>\\n          <input\\n            {...rest}\\n            {...field.props}\\n            classList={{\\n              'is-invalid': field.helpers.error,\\n              'form-control': true,\\n            }}\\n          />\\n          <Show when={field.helpers.error}>\\n            <div class=\\\"invalid-feedback\\\">{field.helpers.errorMessage}</div>\\n          </Show>\\n        </div>\\n      )}\\n    />\\n  );\\n};\\n\""],"names":["index"],"mappings":"AAAA,MAAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;"}