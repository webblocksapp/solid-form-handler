const index = "import { Component, createSignal, Match, Switch, Show } from 'solid-js';\nimport { useFormHandler } from 'solid-form-handler';\nimport { zodSchema } from 'solid-form-handler/zod';\nimport { Step1 } from './Step1';\nimport { Step2 } from './Step2';\nimport { Step3 } from './Step3';\nimport { schema } from './schema';\nimport { FormContext } from './context';\n\nexport const Form: Component = () => {\n  const [step, setStep] = createSignal(1);\n  const formHandler = useFormHandler(zodSchema(schema));\n\n  const submit = async (event: Event) => {\n    event.preventDefault();\n    try {\n      await formHandler.validateForm();\n      alert(JSON.stringify(formHandler.formData()));\n      formHandler.resetForm();\n      setStep(1);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const next = () => {\n    setStep((prev) => prev + 1);\n  };\n\n  const back = () => {\n    setStep((prev) => prev - 1);\n  };\n\n  return (\n    <FormContext.Provider value={{ formHandler }}>\n      <form onSubmit={submit}>\n        <h4 class=\"mb-3\">Using zod schema</h4>\n        <div class=\"row gy-3\">\n          <div class=\"col-12\">\n            <Switch>\n              <Match when={step() === 1}>\n                <Step1 />\n              </Match>\n              <Match when={step() === 2}>\n                <Step2 />\n              </Match>\n              <Match when={step() === 3}>\n                <Step3 />\n              </Match>\n            </Switch>\n          </div>\n          <div class=\"col-12 d-flex justify-content-end\">\n            <Show when={step() > 1}>\n              <button type=\"button\" class=\"btn btn-primary me-2\" onClick={back}>\n                Back\n              </button>\n            </Show>\n            <Show when={step() < 3}>\n              <button\n                type=\"button\"\n                class=\"btn btn-primary\"\n                disabled={formHandler.isFieldInvalid(`step${step()}`)}\n                onClick={next}\n              >\n                Next\n              </button>\n            </Show>\n            <Show when={step() === 3}>\n              <button\n                class=\"btn btn-primary ms-2\"\n                disabled={formHandler.isFormInvalid()}\n              >\n                Submit\n              </button>\n            </Show>\n          </div>\n        </div>\n      </form>\n    </FormContext.Provider>\n  );\n};\n";

export { index as default };
