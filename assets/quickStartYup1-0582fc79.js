const quickStartYup1 = "//@ts-nocheck\nimport { useFormHandler } from 'solid-form-handler';\nimport { __VALIDATOR__Schema } from 'solid-form-handler/__VALIDATOR__';\nimport { Checkbox, Checkboxes, Radios, Select, TextInput } from '@components';\nimport * as yup from 'yup';\n\ntype User = {\n  name: string;\n  email: string;\n  country: number;\n  favoriteFoods: number[];\n  gender: 'male' | 'female' | 'other';\n  subscribed: boolean;\n};\n\nexport const userSchema: yup.Schema<User> = yup.object({\n  name: yup.string().required('Required field'),\n  email: yup.string().email('Invalid email').required('Required field'),\n  country: yup\n    .number()\n    .required('Required field')\n    .typeError('Country is required'),\n  favoriteFoods: yup.array(yup.number().required('Required field')).min(2),\n  gender: yup\n    .mixed()\n    .oneOf(['male', 'female', 'other'], 'Invalid value')\n    .required('Required field'),\n  subscribed: yup.boolean().required('Required field'),\n});\n\nexport const App: Component = () => {\n  const formHandler = useFormHandler(__VALIDATOR__Schema(userSchema));\n  const { formData } = formHandler;\n\n  const submit = async (event: Event) => {\n    event.preventDefault();\n    try {\n      await formHandler.validateForm();\n      alert('Data sent with success: ' + JSON.stringify(formData()));\n      formHandler.resetForm();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <form onSubmit={submit}>\n      <TextInput label=\"Name\" name=\"name\" formHandler={formHandler} />\n      <TextInput label=\"Email\" name=\"email\" formHandler={formHandler} />\n      <Select\n        label=\"Country\"\n        name=\"country\"\n        placeholder=\"Select a country\"\n        options={[\n          { value: 1, label: 'France' },\n          { value: 2, label: 'Spain' },\n          { value: 3, label: 'Canada' },\n        ]}\n        formHandler={formHandler}\n      />\n      <Checkboxes\n        label=\"Favorite foods\"\n        name=\"favoriteFoods\"\n        formHandler={formHandler}\n        options={[\n          { value: 1, label: 'Pizza' },\n          { value: 2, label: 'Hamburger' },\n          { value: 3, label: 'Spaghetti' },\n          { value: 4, label: 'Hot Dog' },\n        ]}\n      />\n      <Radios\n        label=\"Gender\"\n        name=\"gender\"\n        formHandler={formHandler}\n        options={[\n          { value: 'male', label: 'Male' },\n          { value: 'female', label: 'Female' },\n          { value: 'other', label: 'Other' },\n        ]}\n      />\n      <Checkbox\n        label=\"Subscribe to newsletter\"\n        name=\"subscribed\"\n        formHandler={formHandler}\n      />\n      <button disabled={formHandler.isFormInvalid()}>Submit</button>\n    </form>\n  );\n};\n";

export { quickStartYup1 as default };
