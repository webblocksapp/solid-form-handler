{"version":3,"file":"index-a0a86182.js","sources":["../../src/components/Implementation/index.tsx?raw"],"sourcesContent":["export default \"import { Code, CodeTabs, Tabs } from '@components';\\nimport { Component, JSXElement, mergeProps, Switch, Match } from 'solid-js';\\nimport { CodeTab } from '@interfaces';\\n\\nexport interface ImplementationProps {\\n  code?: string;\\n  codeTabs?: CodeTab[];\\n  children?: JSXElement;\\n  language?: string;\\n  class?: string;\\n}\\n\\nexport const Implementation: Component<ImplementationProps> = (props) => {\\n  props = mergeProps({ language: 'tsx' }, props);\\n\\n  return (\\n    <Tabs\\n      class={props.class}\\n      tabs={[\\n        {\\n          text: 'Preview',\\n          children: <div class=\\\"p-2\\\">{props.children}</div>,\\n        },\\n        {\\n          text: 'Code',\\n          children: (\\n            <Switch>\\n              <Match when={props.code !== undefined}>\\n                <Code\\n                  codeClass=\\\"m-0 border-0\\\"\\n                  language={props.language}\\n                  content={props.code}\\n                />\\n              </Match>\\n              <Match when={props.codeTabs !== undefined}>\\n                <CodeTabs\\n                  class=\\\"m-0\\\"\\n                  tabs={props.codeTabs || []}\\n                  border={false}\\n                />\\n              </Match>\\n            </Switch>\\n          ),\\n        },\\n      ]}\\n    />\\n  );\\n};\\n\""],"names":["index"],"mappings":"AAAA,MAAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;"}