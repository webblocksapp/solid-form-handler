{"version":3,"file":"index-41486bf1.js","sources":["../../src/components/CodeTabs/index.tsx?raw"],"sourcesContent":["export default \"import { Code, Tabs } from '@components';\\nimport { CodeTab, Tab } from '@interfaces';\\nimport {\\n  Component,\\n  createEffect,\\n  createSignal,\\n  For,\\n  mergeProps,\\n} from 'solid-js';\\nimport './index.css';\\n\\nexport interface CodeTabsProps {\\n  tabs: CodeTab[];\\n  border?: boolean;\\n  class?: string;\\n}\\n\\nexport const CodeTabs: Component<CodeTabsProps> = (props) => {\\n  const [tabIndex, setTabIndex] = createSignal<number>(0);\\n  const [tabs, setTabs] = createSignal<Tab[]>([]);\\n  props = mergeProps({ class: 'my-3' }, props);\\n\\n  createEffect(() => {\\n    setTabs(() => props.tabs.map((item) => ({ text: item.name })));\\n  });\\n\\n  return (\\n    <div class={props.class} classList={{ 'code-tabs': true }}>\\n      <Tabs tabs={tabs()} onChange={(index) => setTabIndex(index)} />\\n      <div\\n        classList={{\\n          border: props.border === undefined,\\n          'border-top-0': props.border === undefined,\\n        }}\\n      >\\n        <For each={props.tabs}>\\n          {(tab, index) => (\\n            <Code\\n              codeClass=\\\"m-0 border-0\\\"\\n              classList={{\\n                'd-none': tabIndex() !== index(),\\n                'd-block': tabIndex() === index(),\\n              }}\\n              language={tab.language || 'tsx'}\\n              content={tab.code}\\n            />\\n          )}\\n        </For>\\n      </div>\\n    </div>\\n  );\\n};\\n\""],"names":["index"],"mappings":"AAAA,MAAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;"}