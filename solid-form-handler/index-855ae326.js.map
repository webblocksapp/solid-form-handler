{"version":3,"file":"index-855ae326.js","sources":["../../src/components/Checkbox/index.tsx?raw"],"sourcesContent":["export default \"import { FieldProps, Field } from 'solid-form-handler';\\nimport { Component, JSX, Show, splitProps } from 'solid-js';\\n\\nexport type CheckboxProps = Omit<\\n  JSX.InputHTMLAttributes<HTMLInputElement>,\\n  'type'\\n> &\\n  FieldProps & {\\n    label?: string;\\n    display?: 'switch';\\n    uncheckedValue?: string | number;\\n  };\\n\\nexport const Checkbox: Component<CheckboxProps> = (props) => {\\n  const [local, rest] = splitProps(props, [\\n    'classList',\\n    'label',\\n    'display',\\n    'uncheckedValue',\\n    'formHandler',\\n  ]);\\n\\n  return (\\n    <Field\\n      {...props}\\n      mode=\\\"checkbox\\\"\\n      render={(field) => (\\n        <div classList={local.classList}>\\n          <div\\n            classList={{\\n              'is-invalid': field.helpers.error,\\n              'form-check': true,\\n              'form-switch': local.display === 'switch',\\n            }}\\n          >\\n            <input\\n              {...rest}\\n              {...field.props}\\n              type=\\\"checkbox\\\"\\n              classList={{\\n                'is-invalid': field.helpers.error,\\n                'form-check-input': true,\\n              }}\\n            />\\n            <Show when={local.label}>\\n              <label class=\\\"form-check-label\\\" for={field.props.id}>\\n                {local.label}\\n              </label>\\n            </Show>\\n          </div>\\n          <Show when={field.helpers.error}>\\n            <div class=\\\"invalid-feedback\\\">{field.helpers.errorMessage}</div>\\n          </Show>\\n        </div>\\n      )}\\n    />\\n  );\\n};\\n\""],"names":["index"],"mappings":"AAAA,MAAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;"}